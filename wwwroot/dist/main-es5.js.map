{"version":3,"sources":["webpack:///src/app/course/course-edit.component.ts","webpack:///src/app/course/course-edit.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/student/student-add.component.ts","webpack:///src/app/student/student-add.component.html","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/test/test.component.ts","webpack:///src/app/test/test.component.html","webpack:///src/app/teacher/teacher-add.component.ts","webpack:///src/app/teacher/teacher-add.component.html","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/counter/counter.component.html","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/student/student.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/student/student-edit.component.ts","webpack:///src/app/student/student-edit.component.html","webpack:///src/app/course/course-add.component.ts","webpack:///src/app/course/course-add.component.html","webpack:///src/app/student/student.component.ts","webpack:///src/app/student/student.component.html","webpack:///src/app/course/course.component.ts","webpack:///src/app/course/course.component.html","webpack:///src/app/teacher/teacher.component.ts","webpack:///src/app/teacher/teacher.component.html","webpack:///src/app/teacher/teacher-edit.component.ts","webpack:///src/app/teacher/teacher-edit.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CourseEditComponent","http","baseUrl","router","activatedRoute","course","queryParams","subscribe","params","id","loadCourse","get","result","error","console","put","navigateByUrl","editCourse","HomeComponent","environment","production","StudentAddComponent","studentService","student","saveStudent","FetchDataComponent","forecasts","TestComponent","TeacherAddComponent","teacher","post","saveTeacher","CounterComponent","currentCount","incrementCounter","NavMenuComponent","isExpanded","toggle","AppComponent","title","StudentService","AppModule","withServerTransition","appId","forRoot","path","component","pathMatch","relativeLinkResolution","StudentEditComponent","loadStudent","editStudent","CourseAddComponent","saveCourse","StudentComponent","displayedColumns","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","deleteStudent","sort","applyFilter","CourseComponent","TeacherComponent","loadTeacher","TeacherEditComponent","editTeacher","getBaseUrl","document","getElementsByTagName","href","providers","provide","useFactory","deps","bootstrapModule","err","log","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Course } from './course.models';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-course-edit',\r\n  templateUrl: './course-edit.component.html'\r\n})\r\nexport class CourseEditComponent implements OnInit {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n  public course: Course = <Course>{};\r\n  public id: String;\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      this.id = params.id,\r\n        this.loadCourse();\r\n    })\r\n  }\r\n\r\n  public loadCourse() {\r\n    this.http.get<Course>(this.baseUrl + 'api/courses/' + this.id).subscribe(result => {\r\n      this.course = result;\r\n    }, error => console.error(error))\r\n\r\n  }\r\n  public editCourse() {\r\n    this.http.put<Course>(this.baseUrl + 'api/courses/' + this.id, this.course).subscribe(result => {\r\n      this.router.navigateByUrl(\"/course\");\r\n    }, error => console.error(error))\r\n\r\n  }\r\n\r\n}\r\n","<h1 id=\"tableLabel\">Edit Student</h1>\r\n\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Course's name</mat-label>\r\n        <input matInput [(ngModel)]=\"course.name\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Credits</mat-label>\r\n        <input matInput [(ngModel)]=\"course.credits\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Teacher</mat-label>\r\n        <input matInput [(ngModel)]=\"course.teacher\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Classroom</mat-label>\r\n        <input matInput [(ngModel)]=\"course.classroom\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Enrolled</mat-label>\r\n        <input matInput [(ngModel)]=\"course.enrolled\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"editCourse()\">Edit Course</button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Student } from './student.models';\r\nimport { Router } from '@angular/router';\r\nimport { StudentService } from './student.service';\r\n\r\n@Component({\r\n  selector: 'app-student-add',\r\n  templateUrl: './student-add.component.html'\r\n})\r\nexport class StudentAddComponent {\r\n  \r\n\r\n  public student: Student = <Student>{};\r\n\r\n  constructor(\r\n    private studentService: StudentService,\r\n    private router: Router) { }\r\n\r\n  public saveStudent() {\r\n    this.studentService.saveStudent(this.student).subscribe(result => {\r\n      this.router.navigateByUrl(\"/student\");\r\n    }, error => console.error(error))\r\n  }\r\n}\r\n\r\n","<h1 id=\"tableLabel\">Add Student</h1>\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Student's First Name</mat-label>\r\n        <input matInput [(ngModel)]=\"student.firstName\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Last Name</mat-label>\r\n        <input matInput [(ngModel)]=\"student.lastName\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Age</mat-label>\r\n        <input matInput [(ngModel)]=\"student.age\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Average</mat-label>\r\n        <input matInput [(ngModel)]=\"student.average\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Faculty</mat-label>\r\n        <input matInput [(ngModel)]=\"student.faculty\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"saveStudent()\">Save Student</button>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>test works!</p>\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Teacher } from './teacher.models';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-teacher-add',\r\n  templateUrl: './teacher-add.component.html'\r\n})\r\nexport class TeacherAddComponent {\r\n  \r\n\r\n  public teacher: Teacher = <Teacher>{};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router) { }\r\n\r\n  public saveTeacher() {\r\n    this.http.post(this.baseUrl + 'api/teachers', this.teacher).subscribe(result => {\r\n      this.router.navigateByUrl(\"/teacher\");\r\n    }, error => console.error(error))\r\n  }\r\n}\r\n\r\n","<h1 id=\"tableLabel\">Add Teacher</h1>\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Teacher's First Name</mat-label>\r\n        <input matInput [(ngModel)]=\"teacher.firstName\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Last Name</mat-label>\r\n        <input matInput [(ngModel)]=\"teacher.lastName\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Course</mat-label>\r\n        <input matInput [(ngModel)]=\"teacher.course\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput [(ngModel)]=\"teacher.email\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>yearsActive</mat-label>\r\n        <input matInput [(ngModel)]=\"teacher.yearsActive\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"saveTeacher()\">Save Teacher</button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","<h1>Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<header>\r\n  <nav\r\n    class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\r\n  >\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">UniversityProject</a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\".navbar-collapse\"\r\n        aria-label=\"Toggle navigation\"\r\n        [attr.aria-expanded]=\"isExpanded\"\r\n        (click)=\"toggle()\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        class=\"navbar-collapse collapse d-sm-inline-flex justify-content-end\"\r\n        [ngClass]=\"{ show: isExpanded }\"\r\n      >\r\n        <ul class=\"navbar-nav flex-grow\">\r\n          <li class=\"nav-item\"\r\n              [routerLinkActive]=\"['link-active']\"\r\n              [routerLinkActiveOptions]=\"{ exact: true }\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/student']\">Student</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/teacher']\">Teacher</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/course']\">Course</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Student } from './student.models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService {\r\n\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\r\n\r\n  loadStudent() {\r\n    return this.http.get<Student[]>(this.baseUrl + 'api/students');\r\n  }\r\n\r\n  public deleteStudent(student: Student) {\r\n    return this.http.delete(this.baseUrl + 'api/students/' + student.id)\r\n  }\r\n\r\n  public saveStudent(student: Student) {\r\n    return this.http.post(this.baseUrl + 'api/students', student)\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { StudentAddComponent } from './student/student-add.component';\r\nimport { TeacherComponent } from './teacher/teacher.component';\r\nimport { TeacherAddComponent } from './teacher/teacher-add.component';\r\nimport { CourseComponent } from './course/course.component';\r\nimport { CourseAddComponent } from './course/course-add.component';\r\nimport { CourseEditComponent } from './course/course-edit.component';\r\nimport { StudentEditComponent } from './student/student-edit.component';\r\nimport { TeacherEditComponent } from './teacher/teacher-edit.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSortModule } from '@angular/material/sort';\nimport { TestComponent } from './test/test.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    StudentComponent,\r\n    StudentAddComponent,\r\n    StudentEditComponent,\r\n    TeacherComponent,\r\n    TeacherAddComponent,\r\n    TeacherEditComponent,\r\n    CourseComponent,\r\n    CourseAddComponent,\r\n    CourseEditComponent,\r\n    TestComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n    { path: '', component: HomeComponent, pathMatch: 'full' },\r\n    { path: 'counter', component: CounterComponent },\r\n    { path: 'fetch-data', component: FetchDataComponent },\r\n    { path: 'student', component: StudentComponent },\r\n    { path: 'student-add', component: StudentAddComponent },\r\n    { path: 'student-edit/:id', component: StudentEditComponent },\r\n    { path: 'teacher', component: TeacherComponent },\r\n    { path: 'teacher-add', component: TeacherAddComponent },\r\n    { path: 'teacher-edit/:id', component: TeacherEditComponent },\r\n    { path: 'course', component: CourseComponent },\r\n    { path: 'course-add', component: CourseAddComponent },\r\n    { path: 'course-edit/:id', component: CourseEditComponent }\r\n    ], { relativeLinkResolution: 'legacy' }),\r\n    BrowserAnimationsModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatTableModule,\r\n    MatButtonToggleModule,\r\n    MatFormFieldModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatSortModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Student } from './student.models';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-student-edit',\r\n  templateUrl: './student-edit.component.html'\r\n})\r\nexport class StudentEditComponent implements OnInit {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n  public student: Student = <Student>{};\r\n  public id: String;\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.id = params.id,\r\n        this.loadStudent();\r\n    })\r\n  }\r\n\r\n  public loadStudent() {\r\n    this.http.get<Student>(this.baseUrl + 'api/students/' + this.id).subscribe(result => {\r\n      this.student = result;\r\n    }, error => console.error(error))\r\n\r\n  }\r\n  public editStudent() {\r\n    this.http.put<Student>(this.baseUrl + 'api/students/' + this.id, this.student).subscribe(result => {\r\n      this.router.navigateByUrl(\"/student\");\r\n    }, error => console.error(error))\r\n\r\n  }\r\n\r\n}\r\n","<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Student's First Name</mat-label>\r\n        <input matInput [(ngModel)]=\"student.firstName\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Last Name</mat-label>\r\n        <input matInput [(ngModel)]=\"student.lastName\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Age</mat-label>\r\n        <input matInput [(ngModel)]=\"student.age\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Average</mat-label>\r\n        <input matInput [(ngModel)]=\"student.average\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Faculty</mat-label>\r\n        <input matInput [(ngModel)]=\"student.faculty\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"editStudent()\">Edit Student</button>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Course } from './course.models';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-course-add',\r\n  templateUrl: './course-add.component.html'\r\n})\r\nexport class CourseAddComponent {\r\n  \r\n\r\n  public course: Course = <Course>{};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router) { }\r\n\r\n  public saveCourse() {\r\n    this.http.post(this.baseUrl + 'api/courses', this.course).subscribe(result => {\r\n      this.router.navigateByUrl(\"/course\");\r\n    }, error => console.error(error))\r\n  }\r\n}\r\n\r\n","<h1 id=\"tableLabel\">Add Course</h1>\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Course's name</mat-label>\r\n        <input matInput [(ngModel)]=\"course.name\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Credits</mat-label>\r\n        <input matInput [(ngModel)]=\"course.credits\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Teacher</mat-label>\r\n        <input matInput [(ngModel)]=\"course.teacher\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Classroom</mat-label>\r\n        <input matInput [(ngModel)]=\"course.classroom\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Enrolled</mat-label>\r\n        <input matInput [(ngModel)]=\"course.enrolled\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"saveCourse()\">Save Course</button>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { Student } from './student.models';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ViewChild } from '@angular/core';\r\nimport { StudentService } from './student.service';\r\n\r\n@Component({\r\n  selector: 'app-student',\r\n  templateUrl: './student.component.html',\r\n  styleUrls: ['courseStyle.css']\r\n})\r\nexport class StudentComponent {\r\n\r\n  displayedColumns: string[] = ['id', 'firstName', 'lastName', 'age', 'average', 'faculty', 'actions'];\r\n  dataSource: MatTableDataSource<Student>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private studentService: StudentService) {\r\n    this.loadStudent();\r\n    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  public deleteStudent(student: Student) {\r\n    this.studentService.deleteStudent(student).subscribe(result => {\r\n      this.loadStudent();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  loadStudent() {\r\n    this.studentService.loadStudent().subscribe(result => {\r\n      this.dataSource = new MatTableDataSource(result);\r\n      this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n","<h1 id=\"tableLabel\">Students</h1>\r\n\r\n<p>This component demonstrates fetching students from the server</p>\r\n\r\n<p *ngIf=\"!dataSource\"><em>Loading...</em></p>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" [routerLink]=\"['/student-add']\">Add student</button>\r\n</div>\r\n\r\n<mat-form-field>\r\n  <mat-label>Filter</mat-label>\r\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n</mat-form-field>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n\r\n  <!--- Note that these columns can be defined in any order.\r\n        The actual rendered columns are set as a property on the row definition\" -->\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n    <td mat-cell *matCellDef=\"let student\"> {{student.id}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"firstName\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\r\n    <td mat-cell *matCellDef=\"let student\"> {{student.firstName}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"lastName\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\r\n    <td mat-cell *matCellDef=\"let student\"> {{student.lastName}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"age\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Age </th>\r\n    <td mat-cell *matCellDef=\"let student\"> {{student.age}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"average\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Average </th>\r\n    <td mat-cell *matCellDef=\"let student\"> {{student.average}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"faculty\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Faculty </th>\r\n    <td mat-cell *matCellDef=\"let student\"> {{student.faculty}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef style=\"width:15%\">Actions</th>\r\n    <td mat-cell *matCellDef=\"let student\">\r\n      <section>\r\n        <div class=\"example-button-row\">\r\n          \r\n            <button mat-icon-button color=\"accent\" aria-label=\"Example icon button with a home icon\" matTooltip=\"Edit\">\r\n              <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" [routerLink]=\"['/student-edit',student.id]\" style=\"cursor:pointer\">edit</mat-icon>\r\n            </button>\r\n          \r\n          <button mat-icon-button color=\"accent\" aria-label=\"Example icon button with a home icon\" matTooltip=\"Delete\">\r\n            <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" (click)=\"deleteStudent(student)\" style=\"cursor:pointer\">delete</mat-icon>\r\n          </button>\r\n\r\n        </div>\r\n      </section>\r\n    </td>\r\n  </ng-container>\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  <tr class=\"mat-row\" *matNoDataRow>\r\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n  </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Course } from './course.models';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { AfterViewInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.component.html',\r\n   styleUrls: ['courseStyle.css']\r\n})\r\nexport class CourseComponent {\r\n  displayedColumns: string[] = ['id', 'name', 'credits', 'teacher', 'classroom', 'enrolled', 'actions'];\r\n  dataSource: MatTableDataSource<Course>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    this.loadCourse();\r\n    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  public deleteCourse(course: Course) {\r\n    this.http.delete(this.baseUrl + 'api/courses/' + course.id).subscribe(result => {\r\n      this.loadCourse();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  loadCourse() {\r\n    this.http.get<Course[]>(this.baseUrl + 'api/courses').subscribe(result => {\r\n      this.dataSource = new MatTableDataSource(result);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n","<h1 id=\"tableLabel\">Courses</h1>\r\n\r\n<p>This component demonstrates fetching courses from the server</p>\r\n\r\n<p *ngIf=\"!dataSource\"><em>Loading...</em></p>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" [routerLink]=\"['/course-add']\">Add course</button>\r\n</div>\r\n\r\n\r\n<mat-form-field>\r\n  <mat-label>Filter</mat-label>\r\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n</mat-form-field>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n\r\n  <!--- Note that these columns can be defined in any order.\r\n        The actual rendered columns are set as a property on the row definition\" -->\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n    <td mat-cell *matCellDef=\"let course\"> {{course.id}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n    <td mat-cell *matCellDef=\"let course\"> {{course.name}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"credits\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Credits </th>\r\n    <td mat-cell *matCellDef=\"let course\"> {{course.credits}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"teacher\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Teacher </th>\r\n    <td mat-cell *matCellDef=\"let course\"> {{course.teacher}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"classroom\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Classroom </th>\r\n    <td mat-cell *matCellDef=\"let course\"> {{course.classroom}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"enrolled\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Enrolled </th>\r\n    <td mat-cell *matCellDef=\"let course\"> {{course.enrolled}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef style=\"width:15%\">Actions</th>\r\n    <td mat-cell *matCellDef=\"let course\">\r\n\r\n      <section>\r\n        <div class=\"example-button-row\">\r\n      \r\n            <button mat-icon-button color=\"accent\" aria-label=\"Example icon button with a home icon\" matTooltip=\"Edit\">\r\n              <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" [routerLink]=\"['/course-edit',course.id]\" style=\"cursor:pointer\">edit</mat-icon>\r\n            </button>\r\n     \r\n          <button mat-icon-button color=\"accent\" aria-label=\"Example icon button with a home icon\" matTooltip=\"Delete\">\r\n            <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" (click)=\"deleteCourse(course)\" style=\"cursor:pointer\">delete</mat-icon>\r\n          </button>\r\n\r\n        </div>\r\n      </section>\r\n    </td>\r\n  </ng-container>\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  <tr class=\"mat-row\" *matNoDataRow>\r\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n  </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n","import { Component, Inject, ViewChild } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Teacher } from './teacher.models';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-teacher',\r\n  templateUrl: './teacher.component.html',\r\n  styleUrls: ['courseStyle.css']\r\n})\r\nexport class TeacherComponent {\r\n  displayedColumns: string[] = ['id', 'firstName', 'lastName', 'course', 'email', 'yearsActive', 'actions'];\r\n  dataSource: MatTableDataSource<Teacher>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    this.loadTeacher();\r\n    \r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  public deleteStudent(teacher: Teacher) {\r\n    this.http.delete(this.baseUrl + 'api/teachers/' + teacher.id).subscribe(result => {\r\n      this.loadTeacher();\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  loadTeacher() {\r\n    this.http.get<Teacher[]>(this.baseUrl + 'api/teachers').subscribe(result => {\r\n      this.dataSource = new MatTableDataSource(result);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n","<h1 id=\"tableLabel\">Teachers</h1>\r\n\r\n<p>This component demonstrates fetching teachers from the server</p>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" [routerLink]=\"['/teacher-add']\">Add teacher</button>\r\n</div>\r\n\r\n<p *ngIf=\"!dataSource\"><em>Loading...</em></p>\r\n\r\n<mat-form-field>\r\n  <mat-label>Filter</mat-label>\r\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n</mat-form-field>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\r\n\r\n  <!--- Note that these columns can be defined in any order.\r\n        The actual rendered columns are set as a property on the row definition\" -->\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n    <td mat-cell *matCellDef=\"let teacher\"> {{teacher.id}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"firstName\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\r\n    <td mat-cell *matCellDef=\"let teacher\"> {{teacher.firstName}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"lastName\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\r\n    <td mat-cell *matCellDef=\"let teacher\"> {{teacher.lastName}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"course\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Course </th>\r\n    <td mat-cell *matCellDef=\"let teacher\"> {{teacher.course}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"email\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Email </th>\r\n    <td mat-cell *matCellDef=\"let teacher\"> {{teacher.email}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"yearsActive\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Years Active </th>\r\n    <td mat-cell *matCellDef=\"let teacher\"> {{teacher.yearsActive}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"actions\">\r\n    <th mat-header-cell *matHeaderCellDef style=\"width:15%\">Actions</th>\r\n    <td mat-cell *matCellDef=\"let teacher\">\r\n\r\n      <section>\r\n        <div class=\"example-button-row\">\r\n          \r\n            <button mat-icon-button color=\"accent\" aria-label=\"Example icon button with a home icon\" matTooltip=\"Edit\">\r\n              <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" [routerLink]=\"['/teacher-edit',teacher.id]\" style=\"cursor:pointer\">edit</mat-icon>\r\n            </button>\r\n     \r\n          <button mat-icon-button color=\"accent\" aria-label=\"Example icon button with a home icon\" matTooltip=\"Delete\">\r\n            <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" (click)=\"deleteTeacher(teacher)\" style=\"cursor:pointer\">delete</mat-icon>\r\n          </button>\r\n\r\n        </div>\r\n      </section>\r\n    </td>\r\n  </ng-container>\r\n\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  <tr class=\"mat-row\" *matNoDataRow>\r\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n  </tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Teacher } from './teacher.models';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-teacher-edit',\r\n  templateUrl: './teacher-edit.component.html'\r\n})\r\nexport class TeacherEditComponent implements OnInit {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('BASE_URL') private baseUrl: string,\r\n    private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n  public teacher: Teacher = <Teacher>{};\r\n  public id: String;\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.id = params.id,\r\n        this.loadTeacher();\r\n    })\r\n  }\r\n\r\n  public loadTeacher() {\r\n    this.http.get<Teacher>(this.baseUrl + 'api/teachers/' + this.id).subscribe(result => {\r\n      this.teacher = result;\r\n    }, error => console.error(error))\r\n\r\n  }\r\n  public editTeacher() {\r\n    this.http.put<Teacher>(this.baseUrl + 'api/teachers/' + this.id, this.teacher).subscribe(result => {\r\n      this.router.navigateByUrl(\"/teacher\");\r\n    }, error => console.error(error))\r\n\r\n  }\r\n\r\n}\r\n","<h1 id=\"tableLabel\">Edit Teacher</h1>\r\n<table class=\"example-full-width\" cellspacing=\"0\">\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Teacehr's First Name</mat-label>\r\n        <input matInput [(ngModel)]=\"teacher.firstName\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Last Name</mat-label>\r\n        <input matInput [(ngModel)]=\"teacher.lastName\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Course</mat-label>\r\n        <input matInput [(ngModel)]=\"teacher.course\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput [(ngModel)]=\"teacher.email\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <td>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>yearsActive</mat-label>\r\n        <input matInput [(ngModel)]=\"teacher.yearsActive\" />\r\n      </mat-form-field>\r\n    </td>\r\n  </tr>\r\n</table>\r\n\r\n<div class=\"example-button-row\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"editTeacher()\">Edit Teacher</button>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n// export { renderModule, renderModuleFactory } from '@angular/platform-server';\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}